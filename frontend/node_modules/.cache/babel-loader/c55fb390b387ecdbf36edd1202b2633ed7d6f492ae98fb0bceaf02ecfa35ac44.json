{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VAISHNAVI RATHORE\\\\Downloads\\\\deploy-mern-app-1-main\\\\deploy-mern-app-1-main\\\\frontend\\\\src\\\\pages\\\\Listing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Listing.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Listing() {\n  _s();\n  const [savedLists, setSavedLists] = useState(() => {\n    const saved = localStorage.getItem('savedLists');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [selectedList, setSelectedList] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedList, setEditedList] = useState(null);\n  const handleSave = () => {\n    const listName = prompt(\"Enter a name for your list:\");\n    if (listName) {\n      const newList = {\n        name: listName,\n        date: new Date().toLocaleDateString(),\n        images: savedLists // Assuming savedLists contains the current images to be saved\n      };\n      const updatedLists = [...savedLists, newList];\n      setSavedLists(updatedLists);\n      localStorage.setItem('savedLists', JSON.stringify(updatedLists));\n    }\n  };\n  const handleSelectList = index => {\n    setSelectedList(savedLists[index]);\n  };\n  const handleDeleteList = index => {\n    const updatedLists = savedLists.filter((_, i) => i !== index);\n    setSavedLists(updatedLists);\n    localStorage.setItem('savedLists', JSON.stringify(updatedLists));\n  };\n  const handleEditList = index => {\n    setIsEditing(true);\n    setEditedList(savedLists[index]);\n  };\n  const handleSaveEdit = () => {\n    const updatedLists = savedLists.map(list => list.name === editedList.name ? editedList : list);\n    setSavedLists(updatedLists);\n    localStorage.setItem('savedLists', JSON.stringify(updatedLists));\n    setIsEditing(false);\n    setEditedList(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saved Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), savedLists.length > 0 ? savedLists.map((list, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: list.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: list.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectList(index),\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditList(index),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteList(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No saved lists found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), selectedList && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedList.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedList.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedList.images.map((src, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: `Response code ${imgIndex}`\n        }, imgIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Editing \", editedList.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedList.name,\n        onChange: e => setEditedList({\n          ...editedList,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveEdit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Current List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Listing, \"ec136U4DVfaWw+XuiV39rf3P/LI=\");\n_c = Listing;\nexport default Listing;\nvar _c;\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Listing","_s","savedLists","setSavedLists","saved","localStorage","getItem","JSON","parse","selectedList","setSelectedList","isEditing","setIsEditing","editedList","setEditedList","handleSave","listName","prompt","newList","name","date","Date","toLocaleDateString","images","updatedLists","setItem","stringify","handleSelectList","index","handleDeleteList","filter","_","i","handleEditList","handleSaveEdit","map","list","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","src","imgIndex","alt","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/VAISHNAVI RATHORE/Downloads/deploy-mern-app-1-main/deploy-mern-app-1-main/frontend/src/pages/Listing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Listing.css';\r\n\r\n\r\nfunction Listing() {\r\n  const [savedLists, setSavedLists] = useState(() => {\r\n    const saved = localStorage.getItem('savedLists');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [selectedList, setSelectedList] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedList, setEditedList] = useState(null);\r\n\r\n  const handleSave = () => {\r\n    const listName = prompt(\"Enter a name for your list:\");\r\n    if (listName) {\r\n      const newList = {\r\n        name: listName,\r\n        date: new Date().toLocaleDateString(),\r\n        images: savedLists // Assuming savedLists contains the current images to be saved\r\n      };\r\n      const updatedLists = [...savedLists, newList];\r\n      setSavedLists(updatedLists);\r\n      localStorage.setItem('savedLists', JSON.stringify(updatedLists));\r\n    }\r\n  };\r\n\r\n  const handleSelectList = (index) => {\r\n    setSelectedList(savedLists[index]);\r\n  };\r\n\r\n  const handleDeleteList = (index) => {\r\n    const updatedLists = savedLists.filter((_, i) => i !== index);\r\n    setSavedLists(updatedLists);\r\n    localStorage.setItem('savedLists', JSON.stringify(updatedLists));\r\n  };\r\n\r\n  const handleEditList = (index) => {\r\n    setIsEditing(true);\r\n    setEditedList(savedLists[index]);\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    const updatedLists = savedLists.map((list) => (list.name === editedList.name ? editedList : list));\r\n    setSavedLists(updatedLists);\r\n    localStorage.setItem('savedLists', JSON.stringify(updatedLists));\r\n    setIsEditing(false);\r\n    setEditedList(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Saved Lists</h1>\r\n      {savedLists.length > 0 ? (\r\n        savedLists.map((list, index) => (\r\n          <div key={index}>\r\n            <h2>{list.name}</h2>\r\n            <p>{list.date}</p>\r\n            <button onClick={() => handleSelectList(index)}>View</button>\r\n            <button onClick={() => handleEditList(index)}>Edit</button>\r\n            <button onClick={() => handleDeleteList(index)}>Delete</button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No saved lists found.</p>\r\n      )}\r\n\r\n      {selectedList && (\r\n        <div>\r\n          <h2>{selectedList.name}</h2>\r\n          <p>{selectedList.date}</p>\r\n          <div>\r\n            {selectedList.images.map((src, imgIndex) => (\r\n              <img key={imgIndex} src={src} alt={`Response code ${imgIndex}`} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isEditing && (\r\n        <div>\r\n          <h2>Editing {editedList.name}</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={editedList.name}\r\n            onChange={(e) => setEditedList({ ...editedList, name: e.target.value })}\r\n          />\r\n          {/* Add other fields to edit as needed */}\r\n          <button onClick={handleSaveEdit}>Save Changes</button>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={handleSave}>Save Current List</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Listing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}