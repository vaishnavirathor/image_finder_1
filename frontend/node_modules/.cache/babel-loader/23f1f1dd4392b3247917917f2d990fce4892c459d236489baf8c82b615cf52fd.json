{"ast":null,"code":"import React,{useState}from'react';import'./Listing.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Listing(){const[savedLists,setSavedLists]=useState(()=>{const saved=localStorage.getItem('savedLists');return saved?JSON.parse(saved):[];});const[selectedList,setSelectedList]=useState(null);const[isEditing,setIsEditing]=useState(false);const[editedList,setEditedList]=useState(null);const handleSave=()=>{const listName=prompt(\"Enter a name for your list:\");if(listName){const newList={name:listName,date:new Date().toLocaleDateString(),images:savedLists// Assuming savedLists contains the current images to be saved\n};const updatedLists=[...savedLists,newList];setSavedLists(updatedLists);localStorage.setItem('savedLists',JSON.stringify(updatedLists));}};const handleSelectList=index=>{setSelectedList(savedLists[index]);};const handleDeleteList=index=>{const updatedLists=savedLists.filter((_,i)=>i!==index);setSavedLists(updatedLists);localStorage.setItem('savedLists',JSON.stringify(updatedLists));};const handleEditList=index=>{setIsEditing(true);setEditedList(savedLists[index]);};const handleSaveEdit=()=>{const updatedLists=savedLists.map(list=>list.name===editedList.name?editedList:list);setSavedLists(updatedLists);localStorage.setItem('savedLists',JSON.stringify(updatedLists));setIsEditing(false);setEditedList(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"listing-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Saved Lists\"}),savedLists.length>0?savedLists.map((list,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"saved-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:list.name}),/*#__PURE__*/_jsx(\"p\",{children:list.date}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSelectList(index),children:\"View\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditList(index),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteList(index),children:\"Delete\"})]},index)):/*#__PURE__*/_jsx(\"p\",{children:\"No saved lists found.\"}),selectedList&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedList.name}),/*#__PURE__*/_jsx(\"p\",{children:selectedList.date}),/*#__PURE__*/_jsx(\"div\",{children:selectedList.images.map((src,imgIndex)=>/*#__PURE__*/_jsx(\"img\",{src:src,alt:\"Image \".concat(imgIndex)},imgIndex))})]}),isEditing&&/*#__PURE__*/_jsxs(\"div\",{className:\"edit-list\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Editing \",editedList.name]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"edit-input\",value:editedList.name,onChange:e=>setEditedList({...editedList,name:e.target.value})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveEdit,children:\"Save Changes\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,children:\"Save Current List\"})]});}export default Listing;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Listing","savedLists","setSavedLists","saved","localStorage","getItem","JSON","parse","selectedList","setSelectedList","isEditing","setIsEditing","editedList","setEditedList","handleSave","listName","prompt","newList","name","date","Date","toLocaleDateString","images","updatedLists","setItem","stringify","handleSelectList","index","handleDeleteList","filter","_","i","handleEditList","handleSaveEdit","map","list","className","children","length","onClick","src","imgIndex","alt","concat","type","value","onChange","e","target"],"sources":["C:/Users/VAISHNAVI RATHORE/Desktop/Assignment/assignment/frontend/src/pages/Listing.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Listing.css'; \r\n\r\nfunction Listing() {\r\n  const [savedLists, setSavedLists] = useState(() => {\r\n    const saved = localStorage.getItem('savedLists');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [selectedList, setSelectedList] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedList, setEditedList] = useState(null);\r\n\r\n  const handleSave = () => {\r\n    const listName = prompt(\"Enter a name for your list:\");\r\n    if (listName) {\r\n      const newList = {\r\n        name: listName,\r\n        date: new Date().toLocaleDateString(),\r\n        images: savedLists // Assuming savedLists contains the current images to be saved\r\n      };\r\n      const updatedLists = [...savedLists, newList];\r\n      setSavedLists(updatedLists);\r\n      localStorage.setItem('savedLists', JSON.stringify(updatedLists));\r\n    }\r\n  };\r\n\r\n  const handleSelectList = (index) => {\r\n    setSelectedList(savedLists[index]);\r\n  };\r\n\r\n  const handleDeleteList = (index) => {\r\n    const updatedLists = savedLists.filter((_, i) => i !== index);\r\n    setSavedLists(updatedLists);\r\n    localStorage.setItem('savedLists', JSON.stringify(updatedLists));\r\n  };\r\n\r\n  const handleEditList = (index) => {\r\n    setIsEditing(true);\r\n    setEditedList(savedLists[index]);\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    const updatedLists = savedLists.map((list) => (list.name === editedList.name ? editedList : list));\r\n    setSavedLists(updatedLists);\r\n    localStorage.setItem('savedLists', JSON.stringify(updatedLists));\r\n    setIsEditing(false);\r\n    setEditedList(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"listing-container\">\r\n      <h1>Saved Lists</h1>\r\n      {savedLists.length > 0 ? (\r\n        savedLists.map((list, index) => (\r\n          <div key={index} className=\"saved-list\">\r\n            <h2>{list.name}</h2>\r\n            <p>{list.date}</p>\r\n            <button onClick={() => handleSelectList(index)}>View</button>\r\n            <button onClick={() => handleEditList(index)}>Edit</button>\r\n            <button onClick={() => handleDeleteList(index)}>Delete</button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No saved lists found.</p>\r\n      )}\r\n\r\n      {selectedList && (\r\n        <div className=\"selected-list\">\r\n          <h2>{selectedList.name}</h2>\r\n          <p>{selectedList.date}</p>\r\n          <div>\r\n            {selectedList.images.map((src, imgIndex) => (\r\n              <img key={imgIndex} src={src} alt={`Image ${imgIndex}`} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isEditing && (\r\n        <div className=\"edit-list\">\r\n          <h2>Editing {editedList.name}</h2>\r\n          <input\r\n            type=\"text\"\r\n            className=\"edit-input\"\r\n            value={editedList.name}\r\n            onChange={(e) => setEditedList({ ...editedList, name: e.target.value })}\r\n          />\r\n          {/* Add other fields to edit as needed */}\r\n          <button onClick={handleSaveEdit}>Save Changes</button>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={handleSave}>Save Current List</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Listing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}